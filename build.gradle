plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.4.1"
}

group = 'mrs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}

test {
    useJUnitPlatform()
}

// JaCoCo coverage reports
jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

// google java format
googleJavaFormat {
    exclude '**/mybatis/*.java'
}

verifyGoogleJavaFormat {
    exclude '**/mybatis/*.java'
}

// checkstyle
checkstyle {
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '8.34'
    ignoreFailures = true
}
checkstyleMain.exclude "**/mybatis/*.java"
checkstyleTest.exclude "**/mybatis/*.java"

// spot bugs
spotbugs {
    toolVersion = '4.0.6'
    excludeFilter = file("${rootProject.projectDir}/config/spotbugs/spotbugs-exclude.xml")
    ignoreFailures = true
}
